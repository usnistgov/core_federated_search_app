stages:
  - lint
  - test

services:
  - name: postgres:16
    alias: postgres

variables: # https://docs.gitlab.com/ci/services/postgres/#use-postgresql-with-the-docker-executor
  POSTGRES_DB: $POSTGRES_DB
  POSTGRES_USER: $POSTGRES_USER
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD  # Expected by Psql
  POSTGRES_PASS: $POSTGRES_PASSWORD  # Expected by Django settings
  DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432

before_script:
  - apt update
  - apt-get --no-install-recommends install -y gcc git pkg-config libpq-dev postgresql-client libxmlsec1-dev libxmlsec1-openssl libxml2-dev libxslt-dev libssl-dev python3-pip
  - pip install --upgrade pip
  - python -m venv /tmp/venv
  - source /tmp/venv/bin/activate
  - pip install xmlsec==1.3.14
  - pip install -r requirements.txt
  - find . -name 'requirements.*.txt' -exec pip install --pre --index-url ${CI_SERVER_URL}/api/v4/groups/${CI_PROJECT_NAMESPACE_ID}/-/packages/pypi/simple/ -r {} \;
  - MAIN_APP_VERSION="$(pip freeze | grep core-main-app | cut -d '=' -f 3)"
  - pip install --pre --index-url ${CI_SERVER_URL}/api/v4/groups/${CI_PROJECT_NAMESPACE_ID}/-/packages/pypi/simple/ --force-reinstall -U "core_main_app[develop]==${MAIN_APP_VERSION}"
  - pip install -U diff-cover

lint:
  image: python:3.10-slim-bullseye
  stage: lint
  script:
    - black --check .
    - flake8 --extend-ignore E501 .
  rules:
    - if: $CI_COMMIT_BRANCH
      when: always

test:
  stage: test
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.9', '3.10', '3.11', '3.12']
  image: python:${PYTHON_VERSION}-slim-bullseye
  script:
    - coverage run --parallel --source=core_federated_search_app --omit=*settings.py -p runtests.py
    - coverage combine || true
    - coverage xml
    - diff-cover coverage.xml --compare-branch=origin/master --fail-under=100
  rules:
    - if: $CI_COMMIT_BRANCH
      when: on_success
